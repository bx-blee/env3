;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "orderless" :pkgDesc ""
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =component= ~orderless~ ** [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
 (b:pkg:straight|install 'orderless)
;;;#+END:
;;; bcpg:verticoPlus.el --- Blee Component Pkg Grouping (verticoPlus)  -*- lexical-binding: t; -*-

;;;#+BEGIN: b:elisp:pkg/summaryText :outLevel 1 :pkgAdoptionType "bcpg" :pkgName "verticoPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]] Summary:  bcpg Adoption of :verticoPlus
Machine Generated By org-dblock-write:b:elisp:pkg/summaryText
Initiated with yasnippet at: bx-comeega-elisp-mode/begin/packageAdoption [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Summary:
" orgCmntEnd)

;;;#+BEGIN: b:elisp:file/copyLeftPlus :outLevel 1
(orgCmntBegin "
* Libre-Halaal Software --- Part Of Blee ---  Poly-COMEEGA Format.
** This is Libre-Halaal Software. Â© Libre-Halaal Foundation. Subject to AGPL.
** It is not part of Emacs. It is part of Blee.
** Best read and edited  with Poly-COMEEGA (Polymode Colaborative Org-Mode Enhance Emacs Generalized Authorship)
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/authors :authors ("./inserts/authors-mb.org")
(orgCmntBegin "
* Authors: Mohsen BANAN, http://mohsen.banan.1.byname.net/contact
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/orgTopControls :outLevel 1
(orgCmntBegin "
*  ~ORG-TOP-CONTROLS-COME-HERE~
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Commentary, Model and Terminology:
* Relevant Panels:
** [[file:/bisos/panels/blee-core/mail/model/_nodeBase_/fullUsagePanel-en.org]]
** [[file:/bisos/panels/blee-core/mail/Gnus/_nodeBase_/fullUsagePanel-en.org]]
* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
  - [[#maintainers][Maintainers]]
  - [[#module-flags][Module Flags]]
  - [[#plugins][Plugins]]
- [[#prerequisites][Prerequisites]]
- [[#features][Features]]
  - [[#vertico-keybindings][Vertico keybindings]]
  - [[#jump-to-navigation][Jump-to navigation]]
  - [[#project-search--replace][Project search & replace]]
  - [[#in-buffer-searching][In-buffer searching]]
  - [[#vertico-integration-for-various-completing-commands][Vertico integration for various completing commands]]
    - [[#general][General]]
    - [[#jump-to-files-buffers-or-projects][Jump to files, buffers or projects]]
    - [[#search][Search]]
  - [[#consult-modifications][Consult modifications]]
  - [[#marginalia][Marginalia]]
  - [[#orderless-filtering][Orderless filtering]]
- [[#configuration][Configuration]]

* Description
This enhances the Emacs search and completion experience.
Parts of it has been harvested from Doom.

It does this with several modular packages focused on enhancing the built-in
~completing-read~ interface, rather than replacing it with a parallel ecosystem
like =ivy= and =helm= do. The primary packages are:

+ Vertico, which provides the vertical completion user interface
+ Consult, which provides a suite of useful commands using ~completing-read~
+ Embark, which provides a set of minibuffer actions
+ Marginalia, which provides annotations to completion candidates
+ Orderless, which provides better filtering methods

** Module Flags
+ =+icons= Adds icons to =file= and =buffer= category completion selections.

** Plugins
+ [[https://github.com/minad/vertico][vertico]]
+ [[https://github.com/minad/consult][consult]]
+ [[https://github.com/oantolin/embark/][embark]]
+ [[https://github.com/oantolin/embark/][embark-consult]]
+ [[https://github.com/minad/marginalia][marginalia]]
+ [[https://github.com/oantolin/orderless][orderless]]
+ [[https://github.com/mhayashi1120/Emacs-wgrep][wgrep]]
+ [[https://github.com/minad/consult/][consult-flycheck]] (=:checkers syntax=)
+ [[https://github.com/iyefrat/all-the-icons-completion][all-the-icons-completion]] (=+icons=)

* Features

The packages in this module modify and use the built-in ~completing-read~
function, which is used by any function that requires completion. Due to this
the full scope of these packages is too large to cover here and you are
encouraged to go and read their excellent documentation. We will detail
Doom-specific additions:

** Vertico keybindings
When in an active Vertico completion session, the following doom added
keybindings are available:

| Keybind               | Description                                        |
|-----------------------+----------------------------------------------------|
| =C-p=                 | Go to previous candidate                           |
| =C-n=                 | Go to next candidate                               |
| =C-k=                 | (evil) Go to previous candidate                    |
| =C-j=                 | (evil) Go to next candidate                        |
| =C-;= or =<leader> a= | Open an ~embark-act~ menu to chose a useful action |
| =C-c C-;=             | export the current candidate list to a buffer      |
| =C-SPC=               | Preview the current candidate                      |
| =C-M-k=               | (evil) Go to previous candidate and preview.       |
| =C-M-j=               | (evil) Go to next candidate and preview.           |

~embark-act~ will prompt you with a =which-key= menu with useful commands on the
selected candidate or candidate list, depending on the completion category. Note
that you can press =C-h= instead of choosing a command to filter through the
options with a Vertico buffer, that also has slightly more detailed descriptions
due to Marginalia annotations.

** Jump-to navigation
This module provides an interface to navigate within a project using
=projectile=:

https://assets.doomemacs.org/completion/vertico/projectile.png

| Keybind              | Description                         |
|----------------------+-------------------------------------|
| =SPC p f=, =SPC SPC= | Jump to file in project             |
| =SPC f f=, =SPC .=   | Jump to file from current directory |
| =SPC s i=            | Jump to symbol in file              |

** Project search & replace
This module provides interactive text search and replace using ripgrep.

| Keybind   | Description              |
|-----------+--------------------------|
| =SPC s p= | Search project           |
| =SPC s P= | Search another project   |
| =SPC s d= | Search this directory    |
| =SPC s D= | Search another directory |

https://assets.doomemacs.org/completion/vertico/search.png

Prefixing these keys with the universal argument (=SPC u= for evil users; =C-u=
otherwise) changes the behavior of these commands, instructing the underlying
search engine to include ignored files.

This module also provides Ex Commands for evil users:

| Ex command             | Description                                                      |
|------------------------+------------------------------------------------------------------|
| ~:pg[rep][!] [QUERY]~  | Search project (if ~!~, include hidden files)                    |
| ~:pg[rep]d[!] [QUERY]~ | Search from current directory (if ~!~, don't search recursively) |

The optional `!` is equivalent to the universal argument for the previous
commands.

-----

On top of the usual Vertico keybindings, search commands also offer support for
exporting the current candidate list to an editable buffer =C-c C-e=. After
editing the changes can be committed with =C-c C-c= and aborted with =C-c C-k=
(alternatively =ZZ= and =ZQ=, for evil users). It uses =wgrep= for grep
searches, =wdired= for file searches, and =occur= for buffer searches.

https://assets.doomemacs.org/completion/vertico/search-replace.png

** In-buffer searching
This module provides some in buffer searching bindings:

+ =SPC s s= (~isearch~)
+ =SPC s S= (~+vertico/search-symbol-at-point~ via ~consult-line~)
+ =SPC s b= (~consult-line~)

https://assets.doomemacs.org/completion/vertico/buffer-search.png

An ~occur-edit~ buffer can be opened from ~consult-line~ with =C-c C-e=.

** Vertico integration for various completing commands
*** General
| Keybind        | Description                 |
|----------------+-----------------------------|
| =M-x=, =SPC := | Enhanced M-x                |
| =SPC '=        | Resume last Vertico session |

*** Jump to files, buffers or projects
| Keybind              | Description                           |
|----------------------+---------------------------------------|
| =SPC RET=            | Find bookmark                         |
| =SPC f f=, =SPC .=   | Browse from current directory         |
| =SPC p f=, =SPC SPC= | Find file in project                  |
| =SPC f r=            | Find recently opened file             |
| =SPC p p=            | Open another project                  |
| =SPC b b=, =SPC ,=   | Switch to buffer in current workspace |
| =SPC b B=, =SPC <=   | Switch to buffer                      |

=SPC b b= and =SPC ,= support changing the workspace you're selecting a buffer from
via [[https://github.com/minad/consult#narrowing-and-grouping][Consult narrowing]], e.g. if you're on the first workspace, you can switch to
selecting a buffer from the third workspace by typing =3 SPC= into the prompt,
or the last workspace by typing =0 SPC=.

=SPC f f= and =SPC .= support exporting to a =wdired= buffer using =C-c C-e=.

*** Search
| Keybind   | Description                               |
|-----------+-------------------------------------------|
| =SPC p t= | List all TODO/FIXMEs in project           |
| =SPC s b= | Search the current buffer                 |
| =SPC s d= | Search this directory                     |
| =SPC s D= | Search another directory                  |
| =SPC s i= | Search for symbol in current buffer       |
| =SPC s p= | Search project                            |
| =SPC s P= | Search another project                    |
| =SPC s s= | Search the current buffer (incrementally) |

** Consult modifications
This module modifies the default keybindings used in
~consult-completing-read-multiple~:
| Keybind | Description                                                 |
|---------+-------------------------------------------------------------|
| =TAB=   | Select or deselect current candidate                        |
| =RET=   | Enters selected candidates (also toggles current candidate) |

** Marginalia
| Keybind | Description                     |
|---------+---------------------------------|
| =M-A=   | Cycle between annotation levels |

** Orderless filtering
When using orderless to filter through candidates, the default behaviour is for
each space separated input to match the candidate as a regular expression or
literally.

Note that due to this style of matching, pressing tab does not expand the input
to the longest matching prefix (like shell completion), but rather uses the
first matched candidate as input. Filtering further is instead achieved by
pressing space and entering another input. In essence, when trying to match
=foobar.org=, instead of option 1., use option 2.:

1. (BAD) Enter =foo TAB=, completes to =foobar.=, enter =org RET=
2. (GOOD) Enter =foo SPC org RET=

Doom has some builtin [[https://github.com/oantolin/orderless#style-dispatchers][style dispatchers]] for more finegrained filtering, which
you can use to further specify each space separated input in the following ways:
| Input            | Description                                |
|------------------+--------------------------------------------|
| =!foo=           | match without literal input =foo=          |
| =`bar= or =bar`= | match input =bar= as an initialism         |
| ==baz= or =baz== | match only with literal input =baz=        |
| =~qux= or =qux~= | match input =qux= with fuzzy/flex matching |

* Configuration
If you want to further configure this module, here are some good places to start:

+ Vertico provides several [[https://github.com/minad/vertico#extensions][extentions]] that can be used to extend it's interface
+ You can add more Marginalia annotation levels and change the existing ones by
  editing ~marginalia-annotator-registry~
+ You can change the available commands in Embark for category ~$cat~ by editing
  ~embark-$cat-map~, and even add new categories. Note that you add categories
  by defining them [[https://github.com/minad/marginalia/#adding-custom-annotators-or-classifiers][through marginalia]], and embark picks up on them.

* Planned Improvements:
" orgCmntEnd)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "REQUIRES" :extraInfo "Imports"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][Â±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Î]]_     [[elisp:(outline-show-subtree+toggle)][| _REQUIRES_: |]]  Imports  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:


(require 'blee-libs)
(require 'straight)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :title "Variables And Constants" :extraInfo "defvar, defcustom"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][Â±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Î]]_       [[elisp:(outline-show-subtree+toggle)][| *Variables And Constants:* |]]  defvar, defcustom  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/usgEnabled?defvar :outLevel 2 :pkgAdoptionType "bcpg" :pkgName "verticoPlus"
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =defvar= <<bcpg:verticoPlus:usgEnabled?>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defvar bcpg:verticoPlus:usgEnabled? t "verticoPlus package adoption control.")
;;;#+END:

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "Common Facilities" :extraInfo "Library Candidates"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][Â±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Î]]_     [[elisp:(outline-show-subtree+toggle)][| _Common Facilities_: |]]  Library Candidates  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/fullUpdate :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "verticoPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:verticoPlus|fullUpdate>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:verticoPlus|fullUpdate ()
 "verticoPlus package adoption control."
 (b:log|entry (b:func$entry))
  (when bcpg:verticoPlus:usgEnabled?
    (bcpg:verticoPlus:install|update)
    (bcpg:verticoPlus:config|main)
    )
  )
;;;#+END:

;;;#+BEGIN: b:elisp:pkg:install/update :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "verticoPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:verticoPlus:install|update>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:verticoPlus:install|update ()
 "verticoPlus package adoption install or update template."
 (b:log|entry (b:func$entry))
;;;#+END:

;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "vertico" :pkgDesc ""
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =component= ~vertico~ ** [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
 (b:pkg:straight|install 'vertico)
;;;#+END:

;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "orderless" :pkgDesc ""
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =component= ~orderless~ ** [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
 (b:pkg:straight|install 'orderless)
;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "consult" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~consult~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'consult)
 ;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "consult-flycheck" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~consult-flycheck~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'consult-flycheck)
 ;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "embark" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~embark~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'embark)
 ;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "embark-consult" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~embark-consult~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'embark-consult)
 ;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "marginalia" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~marginalia~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'marginalia)
 ;;;#+END:

 ;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "wgrep" :pkgDesc ""
 (orgCmntBegin "
 ** [[elisp:(show-all)][(>]]  =component= ~wgrep~ ** [[elisp:(org-shifttab)][<)]] E|
 " orgCmntEnd)
  (b:pkg:straight|install 'wgrep)
 ;;;#+END:

;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "all-the-icons-completion" :pkgDesc ""
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =component= ~all-the-icons-completion~ ** [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
 (b:pkg:straight|install 'all-the-icons-completion)
 ;;;#+END:

 )

;;;#+BEGIN: b:elisp:pkg:config/main :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "verticoPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:verticoPlus:config|main>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:verticoPlus:config|main ()
 "verticoPlus package adoption config template."
 (b:log|entry (b:func$entry))
;;;#+END:
   ;;; Configuration Material Comes Here
  )

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:vertico|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:vertico|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:vertico|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
  (setq vertico-resize nil
        vertico-count 17
        vertico-cycle t
        completion-in-region-function
        (lambda (&rest args)
          (apply (if vertico-mode
                     #'consult-completion-in-region
                   #'completion--in-region)
                 args)))
  ;; Cleans up path when moving directories with shadowed paths syntax, e.g.
  ;; cleans ~/foo/bar/// to /, and ~/foo/bar/~/ to ~/.
  (add-hook 'rfn-eshadow-update-overlay-hook #'vertico-directory-tidy)
  (map! :map vertico-map [backspace] #'+vertico/backward-updir))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:orderless|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:orderless|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:orderless|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
  (defun +vertico-orderless-dispatch (pattern _index _total)
    (cond
     ;; Ensure $ works with Consult commands, which add disambiguation suffixes
     ((string-suffix-p "$" pattern)
      `(orderless-regexp . ,(concat (substring pattern 0 -1) "[\x100000-\x10FFFD]*$")))
     ;; Ignore single !
     ((string= "!" pattern) `(orderless-literal . ""))
     ;; Without literal
     ((string-prefix-p "!" pattern) `(orderless-without-literal . ,(substring pattern 1)))
     ;; Initialism matching
     ((string-prefix-p "`" pattern) `(orderless-initialism . ,(substring pattern 1)))
     ((string-suffix-p "`" pattern) `(orderless-initialism . ,(substring pattern 0 -1)))
     ;; Literal matching
     ((string-prefix-p "=" pattern) `(orderless-literal . ,(substring pattern 1)))
     ((string-suffix-p "=" pattern) `(orderless-literal . ,(substring pattern 0 -1)))
     ;; Flex matching
     ((string-prefix-p "~" pattern) `(orderless-flex . ,(substring pattern 1)))
     ((string-suffix-p "~" pattern) `(orderless-flex . ,(substring pattern 0 -1)))))
  (setq completion-styles '(orderless)
        completion-category-defaults nil
        ;; note that despite override in the name orderless can still be used in
        ;; find-file etc.
        completion-category-overrides '((file (styles . (orderless partial-completion))))
        orderless-style-dispatchers '(+vertico-orderless-dispatch)
        orderless-component-separator "[ &]")
  ;; ...otherwise find-file gets different highlighting than other commands
  (set-face-attribute 'completions-first-difference nil :inherit nil))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:consult|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:consult|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:consult|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
  (define-key!
    [remap apropos]                       #'consult-apropos
    [remap bookmark-jump]                 #'consult-bookmark
    [remap evil-show-marks]               #'consult-mark
    [remap evil-show-jumps]               #'+vertico/jump-list
    [remap goto-line]                     #'consult-goto-line
    [remap imenu]                         #'consult-imenu
    [remap locate]                        #'consult-locate
    [remap load-theme]                    #'consult-theme
    [remap man]                           #'consult-man
    [remap recentf-open-files]            #'consult-recent-file
    [remap switch-to-buffer]              #'consult-buffer
    [remap switch-to-buffer-other-window] #'consult-buffer-other-window
    [remap switch-to-buffer-other-frame]  #'consult-buffer-other-frame
    [remap yank-pop]                      #'consult-yank-pop
    [remap persp-switch-to-buffer]        #'+vertico/switch-workspace-buffer)
  (advice-add #'completing-read-multiple :override #'consult-completing-read-multiple)
  (advice-add #'multi-occur :override #'consult-multi-occur)
  (setq prefix-help-command #'embark-prefix-help-command)
  ;;; :config
  (setq consult-project-root-function #'doom-project-root
        consult-narrow-key "<"
        consult-line-numbers-widen t
        consult-async-min-input 2
        consult-async-refresh-delay  0.15
        consult-async-input-throttle 0.2
        consult-async-input-debounce 0.1)

  (when doom-projectile-fd-binary
    (setq consult-find-command
          (format "%s -i -H -E .git --regex %s ARG OPTS"
                  doom-projectile-fd-binary
                  (if IS-WINDOWS "--path-separator=/" ""))))

  (consult-customize
   consult-ripgrep consult-git-grep consult-grep
   consult-bookmark consult-recent-file
   +default/search-project +default/search-project-for-symbol-at-point
   +default/search-other-project +vertico/search-symbol-at-point
   +default/search-cwd +default/search-other-cwd
   +default/search-notes-for-symbol-at-point
   consult--source-file consult--source-project-file consult--source-bookmark
   :preview-key (list (kbd "C-SPC") (kbd "C-M-j") (kbd "C-M-k")))
  (consult-customize
   consult-theme
   :preview-key
   (list (kbd "C-SPC") (kbd "C-M-j") (kbd "C-M-k")
         :debounce 0.5 'any))
  (after! org
    (defvar +vertico--consult-org-source
      `(:name     "Org"
        :narrow   ?o
        :hidden t
        :category buffer
        :state    ,#'consult--buffer-state
        :items    ,(lambda () (mapcar #'buffer-name (org-buffer-list)))))
    (add-to-list 'consult-buffer-sources '+vertico--consult-org-source 'append))
  (map! :map consult-crm-map
        :desc "Select candidate" "TAB" #'+vertico/crm-select
        :desc "Enter candidates" "RET" #'+vertico/crm-exit))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:embark|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:consult|embark>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:consult|embark (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
  (set-popup-rule! "^\\*Embark Export Grep" :size 0.35 :ttl 0 :quit nil)

  (setq embark-indicator #'+vertico/embark-which-key-indicator)
  ;; add the package! target finder before the file target finder,
  ;; so we don't get a false positive match.
  (let ((pos (or (cl-position
                  'embark-target-file-at-point
                  embark-target-finders)
                 (length embark-target-finders))))
    (cl-callf2
        cons
        '+vertico-embark-target-package-fn
        (nthcdr pos embark-target-finders)))
  (setq embark-package-map (make-sparse-keymap))
  (map! (:map embark-file-map
         :desc "Open target with sudo" "s"   #'doom/sudo-find-file
         :desc "Open in new workspace" "TAB" #'+vertico/embark-open-in-new-workspace)
        (:map embark-package-map
         "h" #'doom/help-packages
         "b" #'doom/bump-package
         "c" #'doom/help-package-config
         "u" #'doom/help-package-homepage)))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:marginalia|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:marginalia|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:marginalia|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
  (when (featurep! +icons)
    (add-hook 'marginalia-mode-hook #'all-the-icons-completion-marginalia-setup))
  (advice-add #'marginalia--project-root :override #'doom-project-root)
  (pushnew! marginalia-command-categories
            '(+default/find-file-under-here. file)
            '(doom/find-file-in-emacsd . project-file)
            '(doom/find-file-in-other-project . project-file)
            '(doom/find-file-in-private-config . file)
            '(doom/describe-active-minor-mode . minor-mode)
            '(flycheck-error-list-set-filter . builtin)
            '(persp-switch-to-buffer . buffer)
            '(projectile-find-file . project-file)
            '(projectile-recentf . project-file)
            '(projectile-switch-to-buffer . buffer)
            '(projectile-switch-project . project-file)))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:embark-consult|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:embark-consult|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:embark-consult|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
 (add-hook 'embark-collect-mode-hook #'consult-preview-at-point-mode))

;;;#+BEGIN:  b:elisp:defs/defun :defName "b:pkg:wgrep|config"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<b:pkg:wgrep|config>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun b:pkg:wgrep|config (
;;;#+END:
                        )
   " #+begin_org
** DocStr: Actions based on =parameters= and *returnValues*
and side-effects are documented here
#+end_org "
   (setq wgrep-auto-save-buffer t))



(orgCmntBegin "
** Basic Usage:
#+BEGIN_SRC emacs-lisp
(b:pkg:config:vertico)
#+END_SRC
" orgCmntEnd)

;;;#+BEGIN: b:elisp:file/provide :modName nil
(provide 'bcpg:verticoPlus)
;;;#+END:

;;;#+BEGIN: b:elisp:file/endOf :outLevel 1
(orgCmntBegin "
* [[elisp:(show-all)][(>]] ~END-OF-FILE~  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;; local variables:
;;; no-byte-compile: t
;;; end:
;;;#+END:
