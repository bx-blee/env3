;;; bcpg:shellPlus.el --- Blee Component Pkg Grouping (shellPlus)  -*- lexical-binding: t; -*-

;;;#+BEGIN: b:elisp:pkg/summaryText :outLevel 1 :pkgAdoptionType "bcpg" :pkgName "shellPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]] Summary:  bcpg Adoption of :shellPlus
Machine Generated By org-dblock-write:b:elisp:pkg/summaryText
Initiated with yasnippet at: bx-comeega-elisp-mode/begin/packageAdoption [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Summary:
" orgCmntEnd)

;;;#+BEGIN: b:elisp:file/copyLeftPlus :outLevel 1
(orgCmntBegin "
* Libre-Halaal Software --- Part Of Blee ---  Poly-COMEEGA Format.
** This is Libre-Halaal Software. © Libre-Halaal Foundation. Subject to AGPL.
** It is not part of Emacs. It is part of Blee.
** Best read and edited  with Poly-COMEEGA (Polymode Colaborative Org-Mode Enhance Emacs Generalized Authorship)
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/authors :authors ("./inserts/authors-mb.org")
(orgCmntBegin "
* Authors: Mohsen BANAN, http://mohsen.banan.1.byname.net/contact
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/orgTopControls :outLevel 1
(orgCmntBegin "
*  ~ORG-TOP-CONTROLS-COME-HERE~
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Commentary, Model and Terminology:
* Relevant Panels:
** [[file:/bisos/panels/blee-core/mail/model/_nodeBase_/fullUsagePanel-en.org]]
** [[file:/bisos/panels/blee-core/mail/Gnus/_nodeBase_/fullUsagePanel-en.org]]
* Planned Improvements:
" orgCmntEnd)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "REQUIRES" :extraInfo "Imports"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(outline-show-subtree+toggle)][| _REQUIRES_: |]]  Imports  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:


(require 'blee-libs)
(require 'straight)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :title "Variables And Constants" :extraInfo "defvar, defcustom"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(outline-show-subtree+toggle)][| *Variables And Constants:* |]]  defvar, defcustom  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/usgEnabled?defvar :outLevel 2 :pkgAdoptionType "bcpg" :pkgName "shellPlus"
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =defvar= <<bcpg:shellPlus:usgEnabled?>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defvar bcpg:shellPlus:usgEnabled? t "shellPlus package adoption control.")
;;;#+END:

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "Common Facilities" :extraInfo "Library Candidates"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(outline-show-subtree+toggle)][| _Common Facilities_: |]]  Library Candidates  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/fullUpdate :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "shellPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:shellPlus|fullUpdate>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:shellPlus|fullUpdate ()
 "shellPlus package adoption control."
 (b:log|entry (b:func$entry))
  (when bcpg:shellPlus:usgEnabled?
    (bcpg:shellPlus:install|update)
    (bcpg:shellPlus:config|main)
    )
  )
;;;#+END:

;;;#+BEGIN: b:elisp:pkg:install/update :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "shellPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:shellPlus:install|update>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:shellPlus:install|update ()
 "shellPlus package adoption install or update template."
 (b:log|entry (b:func$entry))
;;;#+END:

;;;#+BEGIN:  b:elisp:pkg/install :outLevel 2 :pkgsType "component" :pkgName "multishell" :pkgDesc "pkgDesc"
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =component= ~multishell~ *pkgDesc* [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
 (b:pkg:straight|install 'multishell)
;;;#+END:

;; ;;;#+BEGINNOT:  b:elisp:pkg/install :outLevel 2 :pkgsType "native" :pkgName "multishell" :pkgDesc "pkgDesc"
;; (orgCmntBegin "
;; ** [[elisp:(show-all)][(>]]  =component= ~multishell~ *pkgDesc* [[elisp:(org-shifttab)][<)]] E|
;; " orgCmntEnd)
;;  (if b:g:dev:mode?
;;       (b:pkg:straight|profiledInstall
;;        b:pkgsProfile:native
;;        '(fshell :local-repo "/bisos/git/bxRepos/blee/fshell"))
;;     (b:pkg:straight|profiledInstall
;;        b:pkgsProfile:native
;;      '(fshell :type git :host github :repo "bx-blee/fshell")))
;; ;;;#+END:

   )

;;;#+BEGIN: b:elisp:pkg:config/main :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpg" :pkgName "shellPlus"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpg:shellPlus:install|update>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpg:shellPlus:config|main ()
 "shellPlus package adoption config template."
 (b:log|entry (b:func$entry))
;;;#+END:

 ;; (require 'fshell)

  (setq explicit-shell-file-name		"/bin/bash")
  (setq      shell-command-switch			"-c")

  (setq     shell-cd-regexp			"cd")
  (setq     shell-popd-regexp			"popd\\|\-")
  (setq     shell-pushd-regexp		"pd\\|pushd\\|\=\\|\+")
  (setq     shell-prompt-pattern		"^[^#$%>\n]*[#$%>] *")

  (add-hook 'shell-mode-hook 'ansi-color-for-comint-mode-on)
  (add-hook 'comint-output-filter-functions 'comint-strip-ctrl-m)
  )


(defun comintPlus-editInput (arg)
    (interactive "p")
    (setq debug-on-error t)
    (comint-kill-whole-line 0)
    (end-of-buffer)
    (yank)
    ;;(comint-send-input t)
    ;;(comint-send-input)
    )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; shell interaction
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defvar *preferred-shell-function* 'shell
  "Name of a function that creates a shell interaction buffer.
Default value is 'shell.")

(defun goto-shell (change-cd)
  "Select window for the shell specified by *preferred-shell-function*.
If the shell buffer already has a window, then that window is selected.
Otherwise, the current window is used.

Positions cursor at the end of the shell's buffer.  With argument CHANGE-CD,
then also do a cd to the default-directory of the current-buffer at
function invocation time."
  (interactive "P")
  (let ((current-buffer (current-buffer))
	(current-default-directory default-directory)
	shell-buffer
	shell-buffer-window)

    ;; find the shell buffer
    (save-window-excursion
      (apply *preferred-shell-function* '())
      (setq shell-buffer (current-buffer)))

    (cond ((setq shell-buffer-window (get-buffer-window shell-buffer))
	   ;; shell buffer already has window
	   (select-window shell-buffer-window))
	  (t
	   ;; shell buffer does not have window
	   (switch-to-buffer shell-buffer)))

    (goto-char (point-max))
    (if (and change-cd current-default-directory)
	(progn
	  (process-send-string
	   (get-buffer-process (current-buffer))
	   ;;(format "cd %s\n" current-default-directory)
	   (format "pushd %s\n" current-default-directory)
	   )
	  (sleep-for 2)			; give process-send-string some time
	  (goto-char (point-max))
	  (cd current-default-directory) ; set for the buffer as well
	  ))
    ))


(defun goto-shell-with-cd ()
  "Equivalent to `goto-shell' with ARG."
  (interactive)
  (goto-shell t))




;;;#+BEGIN: b:elisp:file/provide :modName nil
(provide 'bcpg:shellPlus)
;;;#+END:

;;;#+BEGIN: b:elisp:file/endOf :outLevel 1
(orgCmntBegin "
* [[elisp:(show-all)][(>]] ~END-OF-FILE~  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;; local variables:
;;; no-byte-compile: t
;;; end:
;;;#+END:
