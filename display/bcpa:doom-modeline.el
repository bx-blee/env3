;;; bcpa:doom-modeline.el --- Blee Component Pkg Adoption (doom-modeline)  -*- lexical-binding: t; -*-

;;; Initiated with yasnippet at: bx-comeega-elisp-mode/begin/packageAdoption
;;;#+BEGIN: b:elisp:pkg/summaryText :outLevel 1 :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
* [[elisp:(show-all)][(>]] Summary:  bcpa Adoption of :doom-modeline
Machine Generated By org-dblock-write:b:elisp:pkg/summaryText
Initiated with yasnippet at: bx-comeega-elisp-mode/begin/packageAdoption [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Summary:
" orgCmntEnd)

;;;#+BEGIN: b:elisp:file/copyLeftPlus :outLevel 1
(orgCmntBegin "
* Libre-Halaal Software --- Part Of Blee ---  Poly-COMEEGA Format.
** This is Libre-Halaal Software. © Libre-Halaal Foundation. Subject to AGPL.
** It is not part of Emacs. It is part of Blee.
** Best read and edited  with Poly-COMEEGA (Polymode Colaborative Org-Mode Enhance Emacs Generalized Authorship)
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/authors :authors ("./inserts/authors-mb.org")
(orgCmntBegin "
* Authors: Mohsen BANAN, http://mohsen.banan.1.byname.net/contact
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:file/orgTopControls :outLevel 1
(orgCmntBegin "
*  ~ORG-TOP-CONTROLS-COME-HERE~
" orgCmntEnd)
;;;#+END:

(orgCmntBegin "
* Commentary, Model and Terminology:
* Relevant Panels:
** [[file:/bisos/panels/blee-core/mail/model/_nodeBase_/fullUsagePanel-en.org]]
** [[file:/bisos/panels/blee-core/mail/Gnus/_nodeBase_/fullUsagePanel-en.org]]
* Planned Improvements:
" orgCmntEnd)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "REQUIRES" :extraInfo "Imports"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(outline-show-subtree+toggle)][| _REQUIRES_: |]]  Imports  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:


(require 'blee-libs)
(require 'straight)

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 1 :title "Variables And Constants" :extraInfo "defvar, defcustom"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_       [[elisp:(outline-show-subtree+toggle)][| *Variables And Constants:* |]]  defvar, defcustom  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/usgEnabled?defvar :outLevel 2 :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
** [[elisp:(show-all)][(>]]  =defvar= <<bcpa:doom-modeline:usgEnabled?>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defvar bcpa:doom-modeline:usgEnabled? t "doom-modeline package adoption control.")
;;;#+END:

;;;#+BEGIN: blee:bxPanel:foldingSection :outLevel 0 :title "Common Facilities" :extraInfo "Library Candidates"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  _[[elisp:(blee:menu-sel:outline:popupMenu)][±]]_  _[[elisp:(blee:menu-sel:navigation:popupMenu)][Ξ]]_     [[elisp:(outline-show-subtree+toggle)][| _Common Facilities_: |]]  Library Candidates  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;;#+END:

;;;#+BEGIN: b:elisp:pkg/fullUpdate :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpa:doom-modeline|fullUpdate>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpa:doom-modeline|fullUpdate ()
 "doom-modeline package adoption control."
 (b:log|entry (b:func$entry))
  (when bcpa:doom-modeline:usgEnabled?
    (bcpa:doom-modeline:install|update)
    (bcpa:doom-modeline:config|main)
    )
  )
;;;#+END:


;;;#+BEGINNOT: b:elisp:pkg:install/update :outLevel 1 :advice ("pureOnly") :pkgsStage "ready" :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpa:doom-modeline:install|update>> ~advice=(pureOnly)~ [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(advice-add 'bcpa:doom-modeline:install|update :around #'b:advice:common|pureOnly)
(defun bcpa:doom-modeline:install|update ()
 "doom-modeline Component Package Adoption install or update template."
 (b:log|entry (b:func$entry))
 (b:pkg:straight|install 'doom-modeline)
;;;#+END:
 ;; NOTYET, This should become part of the dblock with :pkgName ("one" "two")
 (b:pkg:straight|install 'hide-mode-line)
 )

;;;#+BEGIN: b:elisp:pkg:config/main :advice ("pureOnly") :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpa:doom-modeline:config|main>> ~advice=(pureOnly)~ [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(advice-add 'bcpa:doom-modeline:config|main :around #'b:advice:common|pureOnly)
(defun bcpa:doom-modeline:config|main ()
 "doom-modeline package adoption config template."
 (b:log|entry (b:func$entry))
;;;#+END:
 )

;;;#+BEGIN: b:elisp:pkg:config/main :outLevel 1 :pkgsStage "ready" :pkgAdoptionType "bcpa" :pkgName "doom-modeline"
(orgCmntBegin "
* [[elisp:(show-all)][(>]]  =defun= <<bcpa:doom-modeline:config|main>> [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
(defun bcpa:doom-modeline:config|main ()
 "doom-modeline package adoption config template."
 (b:log|entry (b:func$entry))
;;;#+END:
 (setq doom-modeline-bar-width 5)
 (require 'doom-modeline)
 (doom-modeline-mode 1)

  (add-hook 'magit-mode-hook
    (defun $:b:modeline-hide-in-non-status-buffer-h ()
      "Show minimal modeline in magit-status buffer, no modeline elsewhere."
      (if (eq major-mode 'magit-status-mode)
          (doom-modeline-set-vcs-modeline)
        (hide-mode-line-mode))))
 )

;;;#+BEGIN: b:elisp:file/provide :modName nil
(provide 'bcpa:doom-modeline)
;;;#+END:

;;;#+BEGIN: b:elisp:file/endOf :outLevel 1
(orgCmntBegin "
* [[elisp:(show-all)][(>]] ~END-OF-FILE~  [[elisp:(org-shifttab)][<)]] E|
" orgCmntEnd)
;;; local variables:
;;; no-byte-compile: t
;;; end:
;;;#+END:







